# nginx configuration for tar1090
location /INSTANCE/data/ {
  alias SOURCE_DIR/;
  gzip_static off;
  location ~ aircraft\.json$ {
    add_header Cache-Control "no-cache";
    gzip on;
    gzip_static on;
  }
  location /INSTANCE/data/traces/ {
    location ~ trace_recent {
      gzip off;
    add_header Cache-Control "no-cache";
      add_header Content-Encoding "gzip";
    }
    location ~ trace_full {
      gzip off;
    add_header Cache-Control "no-cache";
      add_header Content-Encoding "gzip";
    }
  }
  location ~ globe_.*\.json$ {
    gzip off;
    add_header Cache-Control "no-cache";
    add_header Content-Encoding "gzip";
  }
  location ~ .*\.binCraft$ {
    gzip off;
    add_header Cache-Control "no-cache";
    add_header Content-Encoding "gzip";
  }
  location ~ .*\.zst$ {
    gzip off;
    add_header Cache-Control "no-cache";
  }
}

location /INSTANCE/osm_tiles_offline/ {
  alias /usr/local/share/osm_tiles_offline/;
}

location /INSTANCE/globe_history/ {
  alias /var/globe_history/;
  gzip on;
  gzip_static off;

  location ~ /acas/ {
    default_type text/plain;
    add_header Cache-Control "no-cache";

    gzip_static on;
  }

  location ~ ....-..-.. {
    absolute_redirect off;
    rewrite "^(.*)/globe_history/(....)-(..)-(..)/(.*)$" "$1/globe_history/$2/$3/$4/$5" last;
  }

  location ~ traces/ {
    gzip off;
    add_header Cache-Control "public, max-age=1209600";
    add_header Content-Encoding "gzip";
  }
  location ~ heatmap/ {
    gzip off;
    add_header Cache-Control "public, max-age=1209600";
    add_header Content-Encoding "gzip";
  }
}

location /INSTANCE/chunks/ {
  alias /run/SERVICE/;
  gzip_static off;
  location ~ chunk_.*\.gz$ {
    gzip off;
    add_header Cache-Control "public, max-age=86400";
    add_header Content-Type "application/json";
    add_header Content-Encoding "gzip";
  }
  location ~ current_.*\.gz$ {
    gzip off;
    add_header Cache-Control "no-cache";
    add_header Content-Type "application/json";
    add_header Content-Encoding "gzip";
  }
  location ~ .*\.json$ {
    gzip on;
    add_header Cache-Control "no-cache";
  }
}

location /INSTANCE/aircraft_sil/ {
    alias /usr/local/share/tar1090/aircraft_sil/;
    add_header Cache-Control "public, max-age=1209600";
    try_files $uri /aircraft_sil/ZZZZ.png;
    absolute_redirect off;
}

location /INSTANCE {
  alias HTMLPATH/;
  try_files $uri $uri/ =404;
  absolute_redirect off;
  gzip off;
  gzip_static off;

  # location block priority:
  # = / exact location matches > regex matches > prefix matchs

  # exact matches
  location = /INSTANCE/config.js {
    add_header Cache-Control "no-cache";
    gzip on;
    gzip_static on;
  }
  location = /INSTANCE/index.html {
    add_header Cache-Control "no-cache";
    gzip on;
    gzip_static on;
    access_by_lua_file /etc/nginx/lua/inject_meta.lua;
    body_filter_by_lua_file /etc/nginx/lua/add_meta_headers.lua;
  }

  # regex matches
  location ~ ^/INSTANCE/style.*\.css$ {
    add_header Cache-Control "public, max-age=7776000";
    gzip on;
    gzip_static on;
  }

  location ~ ^/INSTANCE/db-.*\.js$ {
    gzip off;
    gzip_static off;
    add_header Cache-Control "public, max-age=7776000";
    add_header Content-Encoding "gzip";
  }

  location ~ ^/INSTANCE/libs/.*$ {
    add_header Cache-Control "public, max-age=7776000";
    gzip on;
    gzip_static on;
  }
  location ~ ^/INSTANCE/[^/]*\.js$ {
    add_header Cache-Control "public, max-age=7776000";
    gzip on;
    gzip_static on;
  }

  # prefix matches
  location /INSTANCE/images {
    add_header Cache-Control "public, max-age=7776000";
  }
  location /INSTANCE/flags {
    add_header Cache-Control "public, max-age=7776000";
  }

  # vanity matches
  # -- https://adsb.lol/425854 -> https://adsb.lol/?icao=425854 --- if 6 hex chars
  # -- https://adsb.lol/EHAM -> https://adsb.lol/?airport=EHAM --- if 4 a-z
  # -- https://adsb.lol/AMS -> https://adsb.lol/?airport=AMS --- if 3 a-z
  # -- https://adsb.lol/lat,lon -> https://adsb.lol/?lat=lat&lon=lon --- if , is found
  # -- https://adsb.lol/KLM94G -> https://adsb.lol/?reg=KLM94G --- if above not matched
  # regex woot woot!
  # offload to @fallback on   error_page 404 = @fallback;

  location ~* "^/(?<airport>[a-zA-Z]{3,4})$" {
    # /AMS, /EHAM, etc.
      content_by_lua_block {
          ngx.redirect("/?airport=" .. ngx.var.airport, ngx.HTTP_MOVED_TEMPORARILY)
      }
  }

  location ~* "^/(?<icao>[0-9a-fA-F]{6}(?:,[0-9a-fA-F]{6})*)$" {
    # /000000, /ffffff, etc
      content_by_lua_block {
          ngx.redirect("/?icao=" .. ngx.var.icao, ngx.HTTP_MOVED_TEMPORARILY)
      }
  }

  location ~* "^/(?<lat>[0-9.-]+),(?<lon>[0-9.-]+)$" {
    # 0,0 , 1,1 , -180,-180, etc.
      content_by_lua_block {
          ngx.log(ngx.ERR, "lat: " .. ngx.var.lat .. " lon: " .. ngx.var.lon)
      }
  }

  # lat,lon,zoom

  location ~* "^/(?<lat>[0-9.-]+),(?<lon>[0-9.-]+),(?<zoom>[0-9]+)$" {
      content_by_lua_block {
          ngx.redirect("/?lat=" .. ngx.var.lat .. "&lon=".. ngx.var.lon .. "&zoom=" .. ngx.var.zoom,ngx.HTTP_MOVED_TEMPORARILY)
      }
  }

  # registration
  location ~* "^/(?<reg>[a-zA-Z0-9-]{5,12}(?:,[a-zA-Z0-9-]{5,12})*)$" {
      content_by_lua_block {
          ngx.var.reg = ngx.re.gsub(ngx.var.reg, "-", "")
          ngx.redirect("/?reg=" .. ngx.var.reg, ngx.HTTP_MOVED_TEMPORARILY)
      }
  }
  # registration N \d{1,4}[A-Z]{1,12}
  location ~* "^/(?<reg>[a-zA-Z]{1,2}[0-9]{1,12}[a-zA-Z]{1,12})$" {
      content_by_lua_block {
          ngx.redirect("/?reg=" .. ngx.var.reg, ngx.HTTP_MOVED_TEMPORARILY)
      }
  }


  # callsign is special because we request re-api
  # https://re-api.adsb.lol/?find_callsign=THY1VZ
  # aircraft.0.hex

  # location ~* "^/INSTANCE/(?<callsign>[a-zA-Z0-9]{5,8})$" {
  #     content_by_lua_block {
  #       local http = require "resty.http"
  #       local httpc = http.new()
  #       httpc:set_timeout(1000)
  #       local res, err = httpc:request_uri("http://reapi-readsb.adsblol.svc.cluster.local:30152/?find_callsign=" .. ngx.var.callsign), {ssl_verify = false}
  #       if err then
  #         ngx.log(ngx.ERR, "failed to request 1")
  #         res, err = httpc:request_uri("https://re-api.adsb.lol/?find_callsign=" .. ngx.var.callsign), {ssl_verify = false}
  #       end
  #       if err then
  #         ngx.log(ngx.ERR, "failed to request 2")
  #         -- print the error
  #         ngx.log(ngx.ERR, err)
  #         ngx.redirect("/#oops-i-could-not-find-that-callsign", ngx.HTTP_MOVED_TEMPORARILY)
  #         return
  #       end
  #       if res.status ~= 200 then
  #         ngx.log(ngx.ERR, "failed to request status")
  #         ngx.redirect("/#oops-i-could-not-find-that-callsign", ngx.HTTP_MOVED_TEMPORARILY)
  #         return
  #       end
  #       local json = require "cjson"
  #       local data = json.decode(res.body)
  #       ngx.redirect("/?icao=" .. data.aircraft[0].hex, ngx.HTTP_MOVED_TEMPORARILY)
  #     }
  #   }

}

lua_ssl_verify_depth 2;
lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.pem;
